<template>
  <div class="page" data-name="product">
    <div class="navbar">
      <div class="navbar-bg"></div>
      <div class="navbar-inner sliding">
        <div class="title">My List</div>
        <div class="right">
          <!-- Pencil Icon for Editing Mode -->
          <a href="#" class="link icon-only" @click=${() => toggleEditMode()}>
            <i class="icon f7-icons">pencil</i>
          </a>
          <!-- Plus Icon for Adding New Item -->
          <a href="#" class="link icon-only" @click=${() => showPrompt()}>
            <i class="icon f7-icons">plus</i>
          </a>
        </div>
      </div>
    </div>

    <div class="page-content">
      <div class="block-title">Grouped List</div>
      
      <div class="block block-strong inset">
        <!-- The list will be rendered dynamically here -->
        <div class="list inset list-strong list-dividers-ios">
          <ul id="dynamic-list">
            <!-- Items will be injected here dynamically -->
          </ul>
        </div>
      </div>
    </div>

    <script>
      export default (props, { $f7, $, $on, $onMounted, $update }) => {
        let isEditing = false;
        let listItems = JSON.parse(localStorage.getItem('listItems')) || [];

        // Toggle editing mode
        const toggleEditMode = () => {
          isEditing = !isEditing;
          $update();
        };

        // Show the prompt to add a new item
        const showPrompt = () => {
          $f7.dialog.prompt('Enter the title for the new item:', '', (value) => {
            if (value) {
              addItem(value);
            }
          });
        };

        // Add a new item to the list
        const addItem = (title) => {
          listItems.push({ title });
          localStorage.setItem('listItems', JSON.stringify(listItems));
          $update();
        };

        // Delete an item from the list
        const deleteItem = (index) => {
          listItems.splice(index, 1);
          localStorage.setItem('listItems', JSON.stringify(listItems));
          $update();
        };

        // Render the list items
        const renderList = () => {
          const listElement = document.getElementById('dynamic-list');
          listElement.innerHTML = '';

          listItems.forEach((item, index) => {
            const listItem = document.createElement('li');
            listItem.classList.add('item-content');

            const listInner = document.createElement('div');
            listInner.classList.add('item-inner');

            const listTitle = document.createElement('div');
            listTitle.classList.add('item-title');
            listTitle.textContent = item.title;

            listInner.appendChild(listTitle);

            if (isEditing) {
              const deleteButton = document.createElement('a');
              deleteButton.href = '#';
              deleteButton.classList.add('link', 'icon-only');
              deleteButton.innerHTML = '<i class="icon f7-icons">trash</i>';
              deleteButton.addEventListener('click', () => deleteItem(index));
              listInner.appendChild(deleteButton);
            }

            listItem.appendChild(listInner);
            listElement.appendChild(listItem);
          });
        };

        $on('pageInit', () => {
          renderList();
        });

        // Re-render the list every time the listItems change
        $update(() => {
          renderList();
        });

        return $render;
      };
    </script>
  </div>
</template>
